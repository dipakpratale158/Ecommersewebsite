{"version":3,"file":"static/js/112.3ab0d74b.chunk.js","mappings":"sLAoBA,IAd+B,SAAH,GAAqB,IAAfA,EAAO,EAAPA,QAChC,GAA4BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA/BC,EAAS,EAATA,UAAe,EAAJC,KAEnB,OACE,SAAC,KAAI,CAACC,GAAG,QAASC,UAAWC,EAAAA,EAAAA,WAAmB,UAC9C,gBACED,UAAWC,EAAAA,EAAAA,WACXC,QAAS,kBAAML,EAAUH,EAAQ,EAAC,SACnC,qBAIP,C,oICmNA,UA7Nc,WACZ,OAAmCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtCO,EAAW,EAAXA,YAAaN,EAAS,EAATA,UACrB,GAAwCO,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,KACpC,GAAoCF,EAAAA,EAAAA,WAAS,GAAK,eAA3CG,EAAU,KAAEC,EAAa,KAChC,GAAoCJ,EAAAA,EAAAA,UAAS,IAAG,eAAzCK,EAAU,KAAEC,EAAa,KAChC,GAA8CN,EAAAA,EAAAA,UAAS,IAAG,eAAnDO,EAAe,KAAEC,EAAkB,KAC1C,GAA0CR,EAAAA,EAAAA,UAAS,IAAG,eAA/CS,EAAa,KAAEC,EAAgB,KAChCC,GAAW,OAAO,IAAIC,IAAIb,EAAYc,KAAI,SAACvB,GAAO,OAAKA,EAAQwB,OAAO,MACtEC,GAAS,OAAO,IAAIH,IAAIb,EAAYc,KAAI,SAACvB,GAAO,OAAKA,EAAQ0B,KAAK,MACxE,GAAgChB,EAAAA,EAAAA,UAAS,IAAG,eAArCiB,EAAQ,KAAEC,EAAW,KAC5B,GAAgClB,EAAAA,EAAAA,UAAS,IAAG,eAArCmB,EAAQ,KAAEC,EAAW,KAgDtBC,EAAmBlB,EACrB,CAAEmB,QAAS,OAAQC,SAAU,QAC7B,CAAED,QAAS,SAETE,EAAmBrB,EACrB,CAAEsB,MAAO,MAAOC,cAAe,MAC/B,CAAED,MAAO,OAAQC,cAAe,MAuB9BC,EAAmB5B,EACtB6B,QAAO,SAACtC,GAAO,OACdA,EAAQuC,MAAMC,cAAcC,SAAS1B,EAAWyB,cAAc,IAE/DF,QAAO,SAACtC,GAAO,MACM,KAApBiB,GAAyBjB,EAAQwB,UAAYP,CAAsB,IACnEqB,QAzBoB,SAACtC,GACrB,MAAsB,KAAlBmB,GAGGnB,EAAQ0B,QAAUP,CAC3B,IAqBCmB,QAnBsB,SAACtC,GAC1B,MAAiB,KAAb2B,GAAgC,KAAbE,IAGN,KAAbF,EACK3B,EAAQ0C,OAASb,EAET,KAAbA,EACK7B,EAAQ0C,OAASf,EAEnB3B,EAAQ0C,OAASf,GAAY3B,EAAQ0C,OAASb,EACvD,IAYE,OACE,iBAAKvB,UAAU,OAAM,WACnB,4BACE,kBAAOqC,QAAQ,UAAS,SAAC,cACzB,oBACEC,GAAG,UACHC,MAAOlC,EACPmC,SAAU,SAACC,GAAC,OAAKnC,EAAgBmC,EAAEC,OAAOH,MAAM,EAAC,WAEjD,mBAAQA,MAAM,GAAE,SAAC,sBACjB,mBAAQA,MAAM,SAAQ,SAAC,wBACvB,mBAAQA,MAAM,UAAS,SAAC,wBACxB,mBAAQA,MAAM,MAAK,SAAC,kBACpB,mBAAQA,MAAM,MAAK,SAAC,wBAGxB,gBAAKvC,UAAU,QAAO,UACpB,4BACE,kBAAOqC,QAAQ,UAAS,SAAC,mBACzB,oBACEC,GAAG,UACHC,MAAO5B,EACP6B,SAAU,SAACC,GAAC,OAAK7B,EAAmB6B,EAAEC,OAAOH,MAAM,EAAC,WAEpD,mBAAQA,MAAM,GAAE,SAAC,qBAChBxB,EAAYE,KAAI,SAACC,EAASyB,GAAK,OAC9B,mBAAQJ,MAAOrB,EAAQ,SACpBA,GAD0ByB,EAEpB,aAMjB,iBAAK3C,UAAU,QAAO,WAC1B,kBAAOqC,QAAQ,QAAO,SAAC,WACtBlB,EAAUF,KAAI,SAACG,EAAOuB,GAAK,OAC1B,mBAEE3C,UAAS,uBACPoB,IAAUP,EAAgB,WAAa,IAEzC+B,MAAO,CAAEC,gBAAiBzB,GAC1BlB,QAAS,kBAAMY,EAAiBM,EAAM,GALjCuB,EAML,KAEJ,mBACE3C,UAAS,uBAAoC,KAAlBa,EAAuB,WAAa,IAC/DX,QAAS,kBAAMY,EAAiB,GAAG,EAAC,SACrC,YAOH,iBAAKd,UAAU,WAAU,WACvB,kBAAOqC,QAAQ,WAAU,SAAC,gBAC1B,kBACES,KAAK,SACLR,GAAG,WACHC,MAAOlB,EACPmB,SAAU,SAACC,GAAC,OAAKnB,EAAYmB,EAAEC,OAAOH,MAAM,QAGhD,iBAAKvC,UAAU,WAAU,WACvB,kBAAOqC,QAAQ,WAAU,SAAC,gBAC1B,kBACES,KAAK,SACLR,GAAG,WACHC,MAAOhB,EACPiB,SAAU,SAACC,GAAC,OAAKjB,EAAYiB,EAAEC,OAAOH,MAAM,QAG1C,gBAAKvC,UAAU,oBAAmB,UAChC,SAAC,IAAM,CAACE,QAvHK,WACjBM,GAAeD,EACjB,EAqHkC,SACzBA,GAAa,SAAC,MAAM,KAAM,SAAC,MAAI,SAGpC,iBAAKP,UAAU,cAAa,WAC1B,kBACE8C,KAAK,OACLC,YAAY,sBACZR,MAAO9B,EACP+B,SAAU,SAACC,GAAC,OAAK/B,EAAc+B,EAAEC,OAAOH,MAAM,KAEhD,SAAC,IAAM,CAACrC,QAAS,kBAAMQ,EAAc,GAAG,EAAC,SAAC,cAG5C,iBAAKkC,MAAOnB,EAAiB,UAC1BM,EAAiBiB,MA/KH,SAACC,EAAGC,GACvB,MAAqB,WAAjB7C,EACK4C,EAAEb,MAAQc,EAAEd,MAGA,YAAjB/B,EACK6C,EAAEd,MAAQa,EAAEb,MAGA,QAAjB/B,EACK4C,EAAEhB,MAAMkB,cAAcD,EAAEjB,OAGZ,QAAjB5B,EACK6C,EAAEjB,MAAMkB,cAAcF,EAAEhB,OAG1B,CACT,IA6J2ChB,KAAI,SAACmC,EAAMT,GAC9C,OACE,gBAAK3C,UAAU,GAAG4C,MAAOhB,EAAiB,UACxC,iBAAK5B,UAAU,eAAc,WAC3B,wBAAKoD,EAAKnB,SAEV,SAAC,KAAI,CAAClC,GAAE,mBAAcqD,EAAKd,IAAK,UAC9B,gBAAKtC,UAAU,cAAa,UAC1B,gBAAKqD,IAAKD,EAAKE,SAAUC,IAAKH,EAAKnB,MAAOJ,MAAM,aAIpD,yBAAG,WAASuB,EAAKhB,UAEjB,SAAC,IAAM,CACLpC,UAAU,SACVE,QAAS,kBAAML,EAAUuD,EAAKd,GAAG,EAAC,SACnC,oBAf2CK,EAqBpD,KAEA,0BACE,SAAC,IAAsB,WAKjC,C","sources":["components/pages/AddToCartproductdetail.js","components/pages/Store.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Cart } from \"../CartContext\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport classes from \"../Header.module.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AddToCartproductdetail = ({ product }) => {\r\n  const { addToCart, cart } = useContext(Cart);\r\n\r\n  return (\r\n    <Link to=\"/cart\"  className={classes.seeCartBtn}>\r\n      <div\r\n        className={classes.seeCartBtn}\r\n        onClick={() => addToCart(product)}\r\n      >See Cart Detail</div>\r\n    </Link>\r\n     \r\n  );\r\n};\r\n\r\nexport default AddToCartproductdetail;","import React, { useContext, useState } from \"react\";\nimport { FaList, FaTh } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Cart } from \"../CartContext\";\nimport \"../../App.css\";\nimport AddToCartproductdetail from \"./AddToCartproductdetail\";\n\nconst Store = () => {\n  const { productsArr, addToCart } = useContext(Cart);\n  const [sortingValue, setSortingValue] = useState(\"\");\n  const [isGridView, setIsGridView] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [selectedColor, setSelectedColor] = useState(\"\");\n  const companyList = [...new Set(productsArr.map((product) => product.company))];\n  const colorList = [...new Set(productsArr.map((product) => product.color))];\n  const [minPrice, setMinPrice] = useState(\"\");\n  const [maxPrice, setMaxPrice] = useState(\"\");\n\n\n  const sortProducts = (a, b) => {\n    if (sortingValue === \"lowest\") {\n      return a.price - b.price;\n    }\n\n    if (sortingValue === \"highest\") {\n      return b.price - a.price;\n    }\n\n    if (sortingValue === \"a-z\") {\n      return a.title.localeCompare(b.title);\n    }\n\n    if (sortingValue === \"z-a\") {\n      return b.title.localeCompare(a.title);\n    }\n\n    return 0;\n  };\n\n  ////sort new firt based on id\n  // const sortProducts = (a, b) => {\n  //   if (sortingValue === \"lowest\") {\n  //     return a.price - b.price;\n  //   }\n\n  //   if (sortingValue === \"highest\") {\n  //     return b.price - a.price;\n  //   }\n\n  //   if (sortingValue === \"a-z\") {\n  //     return a.title.localeCompare(b.title);\n  //   }\n\n  //   if (sortingValue === \"z-a\") {\n  //     return b.title.localeCompare(a.title);\n  //   }\n\n  //   return b.id - a.id;\n  // };\n\n  const toggleView = () => {\n    setIsGridView(!isGridView);\n  };\n\n  const productViewStyle = isGridView\n    ? { display: \"flex\", flexWrap: \"wrap\" }\n    : { display: \"block\" };\n\n  const productItemStyle = isGridView\n    ? { width: \"50%\", paddingBottom: \"5%\" }\n    : { width: \"100%\", paddingBottom: \"5%\" };\n\n\n    \n    const filterByColor = (product) => {\n      if (selectedColor === \"\") {\n        return true;\n      }\n      return product.color === selectedColor;\n    };\n    \nconst filterByPriceRange = (product) => {\n  if (minPrice === \"\" && maxPrice === \"\") {\n    return true;\n  }\n  if (minPrice === \"\") {\n    return product.price <= maxPrice;\n  }\n  if (maxPrice === \"\") {\n    return product.price >= minPrice;\n  }\n  return product.price >= minPrice && product.price <= maxPrice;\n};\n  const filteredProducts = productsArr\n    .filter((product) =>\n      product.title.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n    .filter((product) =>\n      selectedCompany !== \"\" ? product.company === selectedCompany : true\n    ).filter(filterByColor)\n    .filter(filterByPriceRange);\n\n\n    \n  return (\n    <div className=\"flex\">\n      <div>\n        <label htmlFor=\"sorting\">Sort by:</label>\n        <select\n          id=\"sorting\"\n          value={sortingValue}\n          onChange={(e) => setSortingValue(e.target.value)}\n        >\n          <option value=\"\">Select an option</option>\n          <option value=\"lowest\">Price: Low to High</option>\n          <option value=\"highest\">Price: High to Low</option>\n          <option value=\"a-z\">Name: A to Z</option>\n          <option value=\"z-a\">Name: Z to A</option>\n        </select>\n      </div>\n      <div className=\"flex1\">\n        <div>\n          <label htmlFor=\"company\">Company Wise:</label>\n          <select\n            id=\"company\"\n            value={selectedCompany}\n            onChange={(e) => setSelectedCompany(e.target.value)}\n          >\n            <option value=\"\">Select a company</option>\n            {companyList.map((company, index) => (\n              <option value={company} key={index}>\n                {company}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"color\">\n  <label htmlFor=\"color\">Color:</label>\n  {colorList.map((color, index) => (\n    <button\n      key={index}\n      className={`color-button ${\n        color === selectedColor ? \"selected\" : \"\"\n      }`}\n      style={{ backgroundColor: color }}\n      onClick={() => setSelectedColor(color)}\n    />\n  ))}\n  <button\n    className={`color-button ${selectedColor === \"\" ? \"selected\" : \"\"}`}\n    onClick={() => setSelectedColor(\"\")}\n  >\n    All\n  </button>\n</div>  \n\n\n\n<div className=\"maxprise\">\n  <label htmlFor=\"minPrice\">Min Price:</label>\n  <input\n    type=\"number\"\n    id=\"minPrice\"\n    value={minPrice}\n    onChange={(e) => setMinPrice(e.target.value)}\n  />\n</div>\n<div className=\"minprise\">\n  <label htmlFor=\"maxPrice\">Max Price:</label>\n  <input\n    type=\"number\"\n    id=\"maxPrice\"\n    value={maxPrice}\n    onChange={(e) => setMaxPrice(e.target.value)}\n  />\n</div>\n      <div className=\"togglegridlistvew\">\n        <Button onClick={toggleView}>\n          {isGridView ? <FaList /> : <FaTh />}\n        </Button>\n      </div>\n      <div className=\"searchinput\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for products\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <Button onClick={() => setSearchTerm(\"\")}>Clear</Button>\n      </div>\n\n      <div style={productViewStyle} >\n        {filteredProducts.sort(sortProducts).map((item, index) => {\n          return (\n            <div className=\"\" style={productItemStyle} key={index}>\n              <div className=\"product-item\">\n                <h3>{item.title}</h3>\n\n                <Link to={`/product/${item.id}`}>\n                  <div className=\"hover-image\">\n                    <img src={item.imageUrl} alt={item.title} width=\"40%\" />\n                  </div>\n                </Link>\n\n                <p>Price: ${item.price}</p>\n\n                <Button\n                  className=\"button\"\n                  onClick={() => addToCart(item.id)}\n                >\n                  Add to Cart\n                </Button>\n              </div>\n            </div>\n          );\n        })}\n\n        <div>\n          <AddToCartproductdetail />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Store"],"names":["product","useContext","Cart","addToCart","cart","to","className","classes","onClick","productsArr","useState","sortingValue","setSortingValue","isGridView","setIsGridView","searchTerm","setSearchTerm","selectedCompany","setSelectedCompany","selectedColor","setSelectedColor","companyList","Set","map","company","colorList","color","minPrice","setMinPrice","maxPrice","setMaxPrice","productViewStyle","display","flexWrap","productItemStyle","width","paddingBottom","filteredProducts","filter","title","toLowerCase","includes","price","htmlFor","id","value","onChange","e","target","index","style","backgroundColor","type","placeholder","sort","a","b","localeCompare","item","src","imageUrl","alt"],"sourceRoot":""}